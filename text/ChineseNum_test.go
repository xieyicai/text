package text

import (
	"strconv"
	"testing"
)

var map2 = map[string]string{
	"零":           "0",
	"零一":          "1",
	"零二":          "2",
	"五":           "5",
	"零十":          "10",
	"十":           "10",
	"一十":          "10",
	"三十":          "30",
	"四十":          "40",
	"九十":          "90",
	"一十一":         "11",
	"九十九":         "99",
	"十三":          "13",
	"五十":          "50",
	"五十六":         "56",
	"一百":          "100",
	"一百零一":        "101",
	"两百":          "200",
	"三百":          "300",
	"二百五":         "250",
	"九百九十九":       "999",
	"一千":          "1000",
	"一千零一":        "1001",
	"一千零一十":       "1010",
	"一千一":         "1100",
	"一千一百":        "1100",
	"一千一百二十五":     "1125",
	"两千":          "2000",
	"两千五":         "2500",
	"三千":          "3000",
	"九千九百九十九":     "9999",
	"一万":          "10000",
	"一万零一":        "10001",
	"一万零一十":       "10010",
	"一万零十一":       "10011",
	"一万零一百":       "10100",
	"一万一千":        "11000",
	"一万一千零一":      "11001",
	"一万一千零一十":     "11010",
	"一万两千三百":      "12300",
	"一万两千三百零一":    "12301",
	"一万两千三百五十":    "12350",
	"一万两千三百五十八":   "12358",
	"三十二万":        "320000",
	"三十二万零一":      "320001",
	"三十二万零一十":     "320010",
	"三十二万零一百":     "320100",
	"三十二万一千":      "321000",
	"三十二万一千零一":    "321001",
	"三十二万一千零一十":   "321010",
	"三十二万两千三百":    "322300",
	"三十二万两千三百零一":  "322301",
	"三十二万两千三百五十":  "322350",
	"三十二万两千三百五十八": "322358",
	"八千万":         "80000000",
	"八千零一万零一百":    "80010100",
	"八千零三十二万零一":   "80320001",
	"八千四百三十二万零一十": "84320010",
	"八千万一千":       "80001000",
	"八千万一千零一":     "80001001",
	"八千万一千零一十":    "80001010",
	"八千万两千三百":     "80002300",
	"八千万两千三百零一":   "80002301",
	"八千万两千三百五十":   "80002350",
	"八千万两千三百五十八":  "80002358",
	"九千九百九十九万九千九百九十九": "99999999",
	"一亿两千万":       "120000000", //00000000
	"两亿五":         "250000000",
	"一百零一亿零一":     "10100000001",
	"八万亿":         "8000000000000",
	"八万零一百亿七千四百万": "8010074000000",
	"八万零一百亿七千四百万零一千":      "8010074001000",
	"八万零一百亿七千四百万零一千二百":    "8010074001200",
	"八万零一百亿七千四百万零一千二百五十":  "8010074001250",
	"八万零一百亿七千四百万零一千二百五十六": "8010074001256",
	"五千万亿":        "5000000000000000",
	"五千万亿零三万四千零一": "5000000000034001",
	"九千九百九十九万九千九百九十九亿九千九百九十九万九千九百九十九": "9999999999999999",
	"两亿零一千":        "200001000",
	"三百零四":         "304",
	"五千万":          "50000000",
	"五千万亿零三万零四百零五": "5000000000030405",
	"九千八百七十六万五千四百三十二亿九千九百九十九万九千九百九十九": "9876543299999999",
	"二百五点三二一": "250.321",
	"十点八":     "10.8",
	"一十点八":    "10.8",
	"十一":      "11",
	"零点3333亿": "33330000",
	"三万五点八二":  "35000.82",
	"七百零三块五":  "703.5",
	"2.5亿":    "250000000",
	"一百亿":     "10000000000",
	"九万亿":     "9000000000000",
}
var map1 = map[string]string{
	"八千万一千零一十": "80001010",
	//"八万亿零三":"8000000000003",
}

func TestChineseNumber_ReadLeft(tt *testing.T) {
	var result string
	cn := &ChineseNumber{}
	for k, v := range map2 {
		input := []rune(k)
		len1 := len(input)
		cn.Input = &input
		cn.SetValue(0)
		cn.SetDecimal("")
		if cn.ReadLeft(0, len1, 0, true) {
			result = strconv.FormatInt(cn.Value, 10)
			if cn.Decimal != "" {
				result += "." + cn.Decimal
			}
			if result != v || cn.Begin != 0 || cn.End != len1 {
				tt.Fatalf("解析失败，%s, %s, cn=%+v。\r\n", k, result, cn)
			}
		} else {
			tt.Fatalf("未能将“%s”解析成数字。cn=%+v\r\n", k, cn)
		}
	}
}

func TestChineseNumber_ReadRight(tt *testing.T) {
	var result string
	cn := &ChineseNumber{}
	for k, v := range map1 {
		input := []rune(k)
		len1 := len(input)
		cn.Input = &input
		cn.SetValue(0)
		cn.SetDecimal("")
		if cn.ReadRight(0, len1, 0, true) {
			result = strconv.FormatInt(cn.Value, 10)
			if cn.Decimal != "" {
				result += "." + cn.Decimal
			}
			if result != v || cn.Begin != 0 || cn.End != len1 {
				tt.Fatalf("解析失败，%s, %s, cn=%+v。\r\n", k, result, cn)
			}
		} else {
			tt.Fatalf("未能将“%s”解析成数字。cn=%+v\r\n", k, cn)
		}
	}
}

var map3 = map[string]string{
	"今年的双十一，淘宝一天的成交额达到了一千零二亿六千九百四十二万五千八百七十六元整":  "今年的双11，淘宝1天的成交额达到了100269425876元整",
	"淘宝今年的成交额达到了一百零六万一千六百八十二亿六千九百四十二万五千八百七十六元整": "淘宝今年的成交额达到了106168269425876元整",
	"我不管你三七二十一，九万亿是必须完成的目标。":                    "我不管你3721，9000000000000是必须完成的目标。",
	"我不管你三七二十一九万亿是必须完成的目标。":                     "我不管你37219000000000000是必须完成的目标。",
	"我在淘宝上买了十个充气娃娃":                             "我在淘宝上买了10个充气娃娃",
	"王健林的小目标是：今年赚它两个亿":                          "王健林的小目标是：今年赚它2个100000000",
	"(零一)这辆自行车只卖七百零三块五，一点都不贵。":                  "(01)这辆自行车只卖703.5，1点都不贵。",
	"我们今年的目标是实现2.5亿的营收。":                        "我们今年的目标是实现250000000的营收。",
	"今年的净利润是负三亿，股票应声下跌三个百分点":                    "今年的净利润是-300000000，股票应声下跌3个100分点",
	"我要团购一百零八张门票":                               "我要团购108张门票",
}

func TestChineseNumber_Replace(tt *testing.T) {
	var fail, success int
	var result string
	for k, v := range map3 {
		result = Replace(k)
		if result != v {
			fail++
			tt.Fatalf("【%s】 --> 【%s】。\r\n", k, result)
		} else {
			success++
		}
	}
	if fail == 0 {
		if success == 0 {
			tt.Log("没有处理任何数据。\r\n")
		} else {
			tt.Logf("%d条数据全部成功。\r\n", success)
		}
	} else {
		if success == 0 {
			tt.Logf("%d条数据全部失败。\r\n", fail)
		} else {
			tt.Logf("成功了%d条，失败了%d条。\r\n", success, fail)
		}
	}
}
